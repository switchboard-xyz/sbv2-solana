{
  "fileName": "private-queue.ts",
  "filePath": "javascript/feed-walkthrough/src/private-queue.ts",
  "url": "https://github.com/switchboard-xyz/sbv2-solana/blob/master/javascript/feed-walkthrough/src/private-queue.ts",
  "summary": "This script demonstrates how to create a private Switchboard oracle queue and fulfill an open round request. The script performs the following tasks:\n\n1. Create a new private Switchboard network with a single oracle and crank.\n2. Create a new data feed for the queue and crank.\n3. Start a new Switchboard oracle and heartbeat on-chain to signal readiness.\n4. Call open round on the feed and await the result.\n\nThe script starts by loading the payer keypair, cluster, and RPC URL from the environment variables or command-line arguments. It then initializes the Switchboard program with the provided cluster and connection.\n\nNext, the script sets up the Switchboard network by creating a new network with a single oracle and crank. It also creates a new data feed for the queue and crank. The network, queue, crank, and oracle account public keys are logged for reference.\n\nAfter setting up the Switchboard network, the script starts the oracle by creating a `NodeOracle` instance with the appropriate configuration. The oracle is started and awaits readiness, ensuring that the active oracles are loaded.\n\nOnce the oracle is ready, the script calls the `openRoundAndAwaitResult` function on the aggregator account to open a new round and wait for the result. The result is then decoded and logged.\n\nFinally, the script stops the oracle and exits the process.\n\nThis script is useful for developers who want to create a private Switchboard oracle queue and fulfill open round requests in their projects. It demonstrates how to set up and interact with the Switchboard network, data feeds, and oracles using the Switchboard SDK.",
  "questions": "1. **Question:** What is the purpose of this script and what are the main steps it performs?\n   **Answer:** This script creates a private Switchboard oracle queue and fulfills its own open round request. The main steps it performs are: creating a new private Switchboard network with a single oracle and crank, creating a new data feed for the queue and crank, starting a new Switchboard oracle and sending a heartbeat on-chain to signal readiness, and calling open round on the feed and awaiting the result.\n\n2. **Question:** How does the script determine the payer keypair path and what are the possible sources for it?\n   **Answer:** The script determines the payer keypair path by first checking if it is provided as a command-line argument (process.argv[2]). If not, it checks if the path is set in the environment variable `PAYER_KEYPAIR`. If neither is provided, it defaults to the path `~/.config/solana/id.json`.\n\n3. **Question:** How does the script decide which cluster to use and how does it determine the RPC URL for the chosen cluster?\n   **Answer:** The script checks the environment variable `CLUSTER` to decide which cluster to use. If the variable is set to \"devnet\" or \"localnet\", it uses the corresponding cluster. If not set or invalid, it defaults to \"devnet\". For determining the RPC URL, it first checks if the environment variable `RPC_URL` is set. If not, it uses the default RPC URL for the chosen cluster (localhost:8899 for localnet, and clusterApiUrl for devnet)."
}