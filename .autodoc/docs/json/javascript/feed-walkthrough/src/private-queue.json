{
  "fileName": "private-queue.ts",
  "filePath": "javascript/feed-walkthrough/src/private-queue.ts",
  "url": "https://github.com/switchboard-xyz/sbv2-solana/blob/master/javascript/feed-walkthrough/src/private-queue.ts",
  "summary": "This code demonstrates how to create a private Switchboard oracle queue and fulfill an open round request. The script performs the following tasks:\n\n1. Create a new private Switchboard network with a single oracle and crank.\n2. Create a new data feed for the queue and crank.\n3. Start a new Switchboard oracle and heartbeat on-chain to signal readiness.\n4. Call open round on the feed and await the result.\n\nThe script begins by importing necessary modules and setting up environment variables. It then defines the `main` function, which performs the following steps:\n\n- Load the payer keypair and determine the cluster and RPC URL.\n- Load the Switchboard program using the `SwitchboardProgram.load` method.\n- Create a new Switchboard network with the `SwitchboardNetwork.create` method. The network has a single oracle and crank, with no slashing or rewards.\n- Create a new data feed for the queue using the `queueAccount.createFeed` method. The feed has a single job with a weight of 2, and uses the OracleJobJson file for its data.\n- Start the oracle using the `NodeOracle.fromReleaseChannel` method and wait for it to become ready.\n- Call the `openRoundAndAwaitResult` method on the aggregator account to open a new round and await the result.\n\nAfter the main function is executed, the script stops the oracle and exits the process.\n\nThis code can be used as a reference for developers who want to create and manage private Switchboard oracle queues in their projects. The script demonstrates how to set up a private network, create a data feed, start an oracle, and call open round on the feed.",
  "questions": "1. **Question:** What is the purpose of this script and what are the main steps it performs?\n   **Answer:** The purpose of this script is to create a private Switchboard oracle queue and fulfill its own open round request. The main steps it performs are: creating a new private Switchboard network with a single oracle and crank, creating a new data feed for the queue and crank, starting a new Switchboard oracle and sending a heartbeat on-chain to signal readiness, and calling open round on the feed and awaiting the result.\n\n2. **Question:** How does the script determine the payer keypair path and the cluster to use?\n   **Answer:** The script first checks if a payer keypair path is provided as a command-line argument, then checks if it's set in the environment variable `PAYER_KEYPAIR`. If neither is provided, it defaults to the path `~/.config/solana/id.json`. For the cluster, it checks if the environment variable `CLUSTER` is set to either \"devnet\" or \"localnet\", otherwise it defaults to \"devnet\".\n\n3. **Question:** How does the script create a new Switchboard network and what are the parameters used for its configuration?\n   **Answer:** The script creates a new Switchboard network by calling `SwitchboardNetwork.create()` with the `program` instance and a configuration object. The configuration object includes parameters such as the network name, slashingEnabled flag, reward, minStake, and the configuration for cranks and oracles."
}